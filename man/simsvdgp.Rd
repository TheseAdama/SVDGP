% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulate.R
\name{simsvdgp}
\alias{simsvdgp}
\title{Simulate spatio-temporal observations from a SVDGP model}
\usage{
simsvdgp(model, D, L)
}
\arguments{
\item{model}{A SVDGP object, typically the output from the \code{svdgppmodel()} function. It should contain
the Gaussian Process models, singular value decomposition matrices (\code{U}, \code{V}, and \code{Sigma}),
and the number of components (\code{K}).}

\item{D}{A matrix of new spatial data for which to simulate spatio-temporal observations. Each row
represents a point in space.}

\item{L}{An integer specifying the number of realizations (simulations) to generate. Default is 100.}
}
\value{
An array of simulated spatio-temporal data with the following structure:
\item{Ysim}{An array of dimensions \code{(L, nrow(D), nt)}, where:
\describe{
\item{\code{L}}{The number of realizations (simulations) generated.}
\item{\code{nrow(D)}}{The number of spatial locations for the new data points.}
\item{\code{nt}}{The number of temporal points.}
}}
}
\description{
This function simulates spatio-temporal data based on a SVDGP model.
It draws multiple realizations from the Gaussian Process for each spatial component and reconstructs
the full spatio-temporal data using the decomposition.
}
\examples{
# Example usage:
# Test function
fxt <- function(x, t) {sin(2 * pi * t * (x - t))}
# Design of experiments
D <- matrix(seq(0, 1, length = 5), ncol = 1)
# Discretized time points
tt <- seq(0, 1, length = 15)
# Spatio-temporal observations matrix
FD <- apply(array(tt), 1, function(t) {apply(D, 1, function(x) {fxt(x, t)})})

# SVD decomposition and GP modelling
model <- svdgppmodel(D, FD, formula = ~1, K = 4, spcovtype = "matern5_2",  typekrig = "SK")
D <- matrix(runif(20), ncol=1)  # New spatial locations
Ysim <- simsvdgp(model, D, L=100)
}
